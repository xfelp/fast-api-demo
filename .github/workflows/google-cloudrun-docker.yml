name: Build, Test, Sonar & Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_ID: "devops-learning-hub"
  REGION: "us-east1"
  ARTIFACT_REPO: "apps"
  SERVICE: "my-service-fast-api-demo"
  WORKLOAD_IDENTITY_PROVIDER: "projects/579046125613/locations/global/workloadIdentityPools/github-pool/providers/github-provider"

permissions:
  contents: read
  id-token: write

jobs:
  test-and-sonar:
    name: Unit tests + Coverage + SonarQube
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Install deps
        run: |
          python -m pip install -U pip
          pip install -r requirements.txt
          # Si faltara algo en requirements.txt, descomenta:
          # pip install pytest pytest-cov httpx

      - name: Run tests with coverage (XML)
        run: pytest --maxfail=1 -q --cov=app --cov-report xml:coverage.xml

      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

      - name: SonarQube Scan
        uses: SonarSource/sonarqube-scan-action@v2
        env:
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-deploy:
    name: Build & Deploy to Cloud Run
    runs-on: ubuntu-latest
    needs: [ test-and-sonar ]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - id: auth
        name: Authenticate to Google Cloud (WIF)
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: github-deployer@${{ env.PROJECT_ID }}.iam.gserviceaccount.com

      - name: Set gcloud project
        run: gcloud config set project "${{ env.PROJECT_ID }}"

      - name: Docker Auth to Artifact Registry
        uses: docker/login-action@v3
        with:
          registry: "${{ env.REGION }}-docker.pkg.dev"
          username: "oauth2accesstoken"
          password: "${{ steps.auth.outputs.access_token }}"  # token del paso auth

      - name: Build & Push image
        env:
          IMAGE_URI: "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}:${{ github.sha }}"
        run: |
          docker build --tag "${IMAGE_URI}" .
          docker push "${IMAGE_URI}"
          echo "IMAGE_URI=${IMAGE_URI}" >> $GITHUB_ENV

      - id: deploy
        name: Deploy to Cloud Run
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: ${{ env.SERVICE }}
          region:  ${{ env.REGION }}
          image:   ${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REPO }}/${{ env.SERVICE }}:${{ github.sha }}

      - name: Show deployed URL
        env:
          CR_URL: ${{ steps.deploy.outputs.url }}
        run: |
          echo "Cloud Run URL: ${CR_URL}"
